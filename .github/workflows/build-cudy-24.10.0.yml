name: build-cudy-24.10.0

on:
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: "请选择路由器型号"
        required: true
        options:
          - cudy_tr3000-v1
          - cudy_tr3000-v1-ubootmod
        default: Cudy_tr3000-v1
      include_docker:
        description: |
          是否编译 Docker 插件
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: |
          chmod +x ${{ github.workspace }}/public/filogic/build-24.sh
          chmod +x ${{ github.workspace }}/public/ramips/build-24.sh

      - name: Get current router model name and set to environment variable
        run: |
          if [ "${{ github.event.inputs.profile }}" = "cudy_tr3000-v1" ]; then
            MODEL="TR3000-V1"
          elif [ "${{ github.event.inputs.profile }}" = "cudy_tr3000-v1-ubootmod" ]; then
            MODEL="TR3000-V1-UbootMod"
          else
            echo "Error: Invalid profile selected!"
            exit 1
          fi
          echo "MODEL=$MODEL" >> $GITHUB_ENV
          echo "MODEL=$MODEL" >> $GITHUB_ENV

      - name: Build Cudy ImmortalWrt 24.10.0
        run: |
          profiles="${{ github.event.inputs.profile }}"
          include_docker="${{ github.event.inputs.include_docker }}"

          if [ "$profiles" = "cudy_tr3000-v1" || "$profiles" = "cudy_tr3000-v1-ubootmod" ]; then
            tag=mediatek-filogic-openwrt-24.10.0
            build_script="public/filogic/build-24.sh"
            echo "platform=mediatek/filogic" >> $GITHUB_ENV
          fi

          IFS=',' read -r -a profile_array <<< "$profiles"

          for profile in "${profile_array[@]}"; do
            echo "Building for profile: $profile"

            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/files/etc/uci-defaults:/home/build/immortalwrt/files/etc/uci-defaults" \
              -v "${{ github.workspace }}/$build_script:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e INCLUDE_DOCKER=$include_docker \
              immortalwrt/imagebuilder:$tag /bin/bash /home/build/immortalwrt/build.sh
          done

      - name: Generate Firmware SHA-256
        run: |
          tree ${{ github.workspace }}/bin/targets/${{ env.platform }}
          cp -r ${{ github.workspace }}/bin/targets/${{ env.platform }}/*.fip ${{ github.workspace }}
          cp -r ${{ github.workspace }}/bin/targets/${{ env.platform }}/*.itb ${{ github.workspace }}
          cp -r ${{ github.workspace }}/bin/targets/${{ env.platform }}/*.bin ${{ github.workspace }}
          for file in *.fip; do
            sha256sum "$file" > "$file.sha256"
            sha256sum -c "$file.sha256"
          done
          for file in *.itb; do
            sha256sum "$file" > "$file.sha256"
            sha256sum -c "$file.sha256"
          done
          for file in *.bin; do
            sha256sum "$file" > "$file.sha256"
            sha256sum -c "$file.sha256"
          done

      - name: Generate release informations
        run: |
          TIME="$(curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" | jq -r .created_at)"

          RELEASE_TAG="ImmortalWrt-Cudy-${{ env.MODEL }}"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV

          if [ "${{ github.event.inputs.include_docker }}" == "yes" ]; then
            IS_DOCKER="是"
          else
            IS_DOCKER="否"
          fi

          cat <<EOF | sed -E 's/^  //' > Release.md
            CI ImmortalWrt-23.05.4-Cudy-${{ env.MODEL }} $(date -d "${TIME}" -u +'%Y-%m-%d %H:%M:%S %Z(%:z)')

            构建时间：\`$(date -d "${TIME}" -u +'%Y-%m-%d %H:%M:%S %Z(%:z)')\`
            构建版本：ImmortalWrt-23.05.4-Cudy-${{ env.MODEL }}
            是否内置 Docker ：$IS_DOCKER
            登录后台：`192.168.100.1`
            用户名：`root`
            密码：无
          EOF

          echo "RELEASE_NAME=$(head --line=1 Release.md)" >> $GITHUB_ENV
          tail --line=+2 Release.md > Body.md

      - name: Upload ImmortalWrt as release assets
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_NAME }}
          body_path: ${{ github.workspace }}/Body.md
          files: |
            ${{ github.workspace }}/*.fip
            ${{ github.workspace }}/*.itb
            ${{ github.workspace }}/*.bin
            ${{ github.workspace }}/*.sha256
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}